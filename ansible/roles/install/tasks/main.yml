---
- name: Go Repository
  become: yes
  apt_repository:
    repo: ppa:longsleep/golang-backports
  tags: "{{ NODE_GROUP }}"

- name: Install required system packages
  become: yes
  apt: 
    name: ['git', 'curl', 'build-essential', 'jq', 'golang-go'] 
    state: latest 
    update_cache: yes
  tags: '{{ NODE_GROUP }}'

- name: Create Blz directories if they don't exist
  file:
    path: "{{ item }}"
    state: directory
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    mode: 0775
  with_items:
    - $HOME/go/src/github.com/bluzelle
    - $HOME/go/bin
    - $HOME/pkg
  tags: "{{ NODE_GROUP }}"

- name: Update bashrc for user
  lineinfile:
    dest=$HOME/.bashrc
    line="export PATH=$HOME/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:~/bin"
    owner="{{ ansible_user }}"
  tags: "{{ NODE_GROUP }}"


- name: Clone Bluzelle Repo
  git:
    repo: https://github.com/bluzelle/curium.git
    version: devel
    dest: $HOME/go/src/github.com/bluzelle/curium
    update: no
  tags: "{{ NODE_GROUP }}"

- name: Make bluzelle testnet target
  make:
    chdir: $HOME/go/src/github.com/bluzelle/curium
    target: testnet
  register: shell_result
  tags: "{{ NODE_GROUP }}"

- debug:
    var: shell_result.stdout_lines
  tags: "{{ NODE_GROUP }}"

- name: Verify Bluzelle version
  shell: $HOME/go/bin/blzcli version --long
  register: shell_result
  tags: "{{ NODE_GROUP }}"

- debug:
    var: shell_result.stdout_lines
  tags: "{{ NODE_GROUP }}"

- name: Remove old Genesis
  file:
    path: $HOME/.blzd/config/genesis.json
    state: absent
  tags: "{{ NODE_GROUP }}"

- name: Init chain
  shell: $HOME/go/bin/blzd init {{ validator }} --chain-id bluzelleTestPublic-1  2>&1 | jq .node_id
  register: node_id
  tags: "{{ NODE_GROUP }}"

- debug:
    var: node_id.stdout_lines
  tags: "{{ NODE_GROUP }}"

- name: Configure Blzcli
  shell: | 
    $HOME/go/bin/blzcli config chain-id bluzelleTestPublic-1
    $HOME/go/bin/blzcli config output json 
    $HOME/go/bin/blzcli config indent true 
    $HOME/go/bin/blzcli config trust-node true
    $HOME/go/bin/blzcli config keyring-backend test
  tags: "{{ NODE_GROUP }}"

- name: Remove old Genesis
  file:
    path: $HOME/.blzd/config/genesis.json
    state: absent
  tags: "{{ NODE_GROUP }}"

- name: Reset daemon state
  shell: $HOME/go/bin/blzd unsafe-reset-all
  register: shell_result
  tags: "{{ NODE_GROUP }}"

- debug:
    var: shell_result.stdout_lines
  tags: "{{ NODE_GROUP }}"

- name: Copy the genesis file
  shell: curl http://client.sentry.testnet.public.bluzelle.com:26657/genesis | jq '.result.genesis' > $HOME/.blzd/config/genesis.json
  tags: "{{ NODE_GROUP }}"

- name: Add persistent peers
  replace:
    path: $HOME/.blzd/config/config.toml
    regexp: 'persistent_peers = .*$'
    replace: 'persistent_peers = "{{ persistent_peers }}"'
  tags: "{{ NODE_GROUP }}"

- name: Changing mempool size
  replace:
    path: $HOME/.blzd/config/config.toml
    regexp: 'size = 5000'
    replace: 'size = 1000'
  tags: "{{ NODE_GROUP }}"

- name: Changing number of inbound peers
  replace:
    path: $HOME/.blzd/config/config.toml
    regexp: 'max_num_inbound_peers = .*$'
    replace: 'max_num_inbound_peers = 200'
  tags: "{{ NODE_GROUP }}"

- name: Changing number of outbound peers
  replace:
    path: $HOME/.blzd/config/config.toml
    regexp: 'max_num_outbound_peers = .*$'
    replace: 'max_num_outbound_peers = 100'
  tags: "{{ NODE_GROUP }}"

- name: Changing addrbook value
  when: NODE_GROUP == "validator"
  replace:
    path: $HOME/.blzd/config/config.toml
    regexp: 'addr_book_strict = true'
    replace: 'addr_book_strict = false'
  tags: "{{ NODE_GROUP }}"

- name: changing pex value
  when: NODE_GROUP == "validator"
  replace:
    path: $HOME/.blzd/config/config.toml
    regexp: 'pex = true'
    replace: 'pex = false'
  tags: "{{ NODE_GROUP }}"

- name: Enabling prometheus
  replace:
    path: $HOME/.blzd/config/config.toml
    regexp: 'prometheus = false'
    replace: 'prometheus = true'
  tags: "{{ NODE_GROUP }}"

- name: Patch gas price to app.toml
  replace:
    path: $HOME/.blzd/config/app.toml
    regexp: 'minimum-gas-prices = ""'
    replace: 'minimum-gas-prices = "10.0ubnt"'
  tags: "{{ NODE_GROUP }}"

- name: Add CRUD to app.toml
  lineinfile:
    path: $HOME/.blzd/config/app.toml
    line: 'bluzelle_crud = true'
  tags: "{{ NODE_GROUP }}"

- name: Copy blzd.service file 
  become: yes
  copy:
    src: "blzd.service"
    dest: "/etc/systemd/system/"
    owner: "root"
    group: "root"
  tags: "{{ NODE_GROUP }}"

- name: Change user in systemd unit file
  become: yes
  replace:
    path: /etc/systemd/system/blzd.service
    regexp: 'User=root'
    replace: 'User={{ ansible_user }}'
  tags: "{{ NODE_GROUP }}"

- name: Systemd Daemon-Reload
  become: yes
  systemd:
    daemon_reload: yes

- name: Start Blzd Service
  become: yes
  systemd:
    name: blzd
    state: started
    enabled: yes

- name: Pause while daemon is initializing
  pause:
    seconds: '30'

- name: Verify Bluzelle status
  shell: $HOME/go/bin/blzcli status
  register: node_status
  tags: "{{ NODE_GROUP }}"

- debug:
    var: node_status.stdout_lines
  tags: "{{ NODE_GROUP }}"

